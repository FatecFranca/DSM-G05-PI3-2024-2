generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String       @id @default(auto()) @map("_id") @db.ObjectId
  farm                Farm         @relation(fields: [farmId], references: [id])
  farmId              String       @db.ObjectId
  name                String
  function            Function     @relation(fields: [functionId], references: [id])
  functionId          String       @db.ObjectId
  master              Boolean
  email               String       @unique
  password            String
  created_at          DateTime
  status_active       Boolean
  schedules           Schedule[]
}

model Function {
  id                  String       @id @default(auto()) @map("_id") @db.ObjectId
  function_name       String
  created_at          DateTime
  status_active       Boolean
  users               User[]
}

model Farm {
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  registration_date       DateTime?
  status                  Boolean
  cnpj                    String       @unique
  fantasy_name            String
  social_reason           String?
  cep                     String?
  address                 String
  number_address          String?
  phone_number            String
  created_at              DateTime
  status_active           Boolean
  users                   User[]       
  schedules               Schedule[]
}

model Lot {
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  lot_name                String
  lot_type                String
  description             String
  created_at              DateTime
  status_active           Boolean
  animals                 Animal[] 
}

model Animal {
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  earring                 String
  name_animal             String
  collar                  String
  gender                  String
  lotId                   String       @db.ObjectId
  lot                     Lot          @relation(fields: [lotId], references: [id])
  birthdate               DateTime
  last_childbirth         DateTime?
  pregnant                Boolean
  animal_breed            String
  name_father             String?
  name_mother             String?
  birth_weight            String
  created_at              DateTime
  status_active           Boolean
  alerts                  Alert[]
}

model Alert {
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  animalId                String       @db.ObjectId
  animal                  Animal       @relation(fields: [animalId], references: [id])
  description             String
  resolution              String?
  resolution_date         DateTime?
  created_at              DateTime
  status_active           Boolean
}

model Schedule {
  id                 String     @id @default(auto()) @map("_id") @db.ObjectId
  description        String
  date_scheduled     DateTime
  userId             String     @db.ObjectId
  user               User       @relation(fields: [userId], references: [id])
  farmId             String     @db.ObjectId
  farm               Farm       @relation(fields: [farmId], references: [id])
  created_at         DateTime   @default(now())
  status_active      Boolean
}
